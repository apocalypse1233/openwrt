Index: b/drivers/net/wireless/ralink/rt2x00/rt2800.h
===================================================================
--- a/drivers/net/wireless/ralink/rt2x00/rt2800.h
+++ b/drivers/net/wireless/ralink/rt2x00/rt2800.h
@@ -51,6 +51,7 @@
  * RF3053 2.4G/5G 3T3R(RT3883/RT3563/RT3573/RT3593/RT3662)
  * RF5592 2.4G/5G 2T2R
  * RF3070 2.4G 1T1R
+ * RF3078 2.4G 1T1R
  * RF5360 2.4G 1T1R
  * RF5362 2.4G 1T1R
  * RF5370 2.4G 1T1R
@@ -71,6 +72,7 @@
 #define RF3053				0x000d
 #define RF5592				0x000f
 #define RF3070				0x3070
+#define RF3078				0x3078
 #define RF3290				0x3290
 #define RF5350				0x5350
 #define RF5360				0x5360
@@ -89,6 +91,8 @@
 #define REV_RT2872E			0x0200
 #define REV_RT3070E			0x0200
 #define REV_RT3070F			0x0201
+#define REV_RT3078E			0x0200
+#define REV_RT3078F			0x0201
 #define REV_RT3071E			0x0211
 #define REV_RT3090E			0x0211
 #define REV_RT3390E			0x0211
Index: b/drivers/net/wireless/ralink/rt2x00/rt2x00.h
===================================================================
--- a/drivers/net/wireless/ralink/rt2x00/rt2x00.h
+++ b/drivers/net/wireless/ralink/rt2x00/rt2x00.h
@@ -162,6 +162,7 @@ struct rt2x00_chip {
 #define RT2872		0x2872	/* WSOC */
 #define RT2883		0x2883	/* WSOC */
 #define RT3070		0x3070
+#define RT3078		0x3078
 #define RT3071		0x3071
 #define RT3090		0x3090	/* 2.4GHz PCIe */
 #define RT3290		0x3290
Index: b/drivers/net/wireless/ralink/rt2x00/rt2800lib.c
===================================================================
--- a/drivers/net/wireless/ralink/rt2x00/rt2800lib.c
+++ b/drivers/net/wireless/ralink/rt2x00/rt2800lib.c
@@ -676,6 +676,7 @@ int rt2800_check_firmware(struct rt2x00_
 	    !rt2x00_rt(rt2x00dev, RT2860) &&
 	    !rt2x00_rt(rt2x00dev, RT2872) &&
 	    !rt2x00_rt(rt2x00dev, RT3070) &&
+	    !rt2x00_rt(rt2x00dev, RT3078) &&
 	    ((len / fw_len) == 1))
 		return FW_BAD_VERSION;
 
@@ -1984,6 +1985,7 @@ void rt2800_config_ant(struct rt2x00_dev
 	switch (ant->rx_chain_num) {
 	case 1:
 		if (rt2x00_rt(rt2x00dev, RT3070) ||
+		    rt2x00_rt(rt2x00dev, RT3078) ||
 		    rt2x00_rt(rt2x00dev, RT3090) ||
 		    rt2x00_rt(rt2x00dev, RT3352) ||
 		    rt2x00_rt(rt2x00dev, RT3390)) {
@@ -3571,6 +3573,7 @@ static void rt2800_config_channel(struct
 		rt2800_config_channel_rf3322(rt2x00dev, conf, rf, info);
 		break;
 	case RF3070:
+	case RF3078:
 	case RF5350:
 	case RF5360:
 	case RF5362:
@@ -3591,6 +3594,7 @@ static void rt2800_config_channel(struct
 	}
 
 	if (rt2x00_rf(rt2x00dev, RF3070) ||
+	    rt2x00_rf(rt2x00dev, RF3078) ||
 	    rt2x00_rf(rt2x00dev, RF3290) ||
 	    rt2x00_rf(rt2x00dev, RF3322) ||
 	    rt2x00_rf(rt2x00dev, RF5350) ||
@@ -4675,6 +4679,7 @@ static void rt2800_config_txpower_rt28xx
 	case RT2872:
 	case RT2883:
 	case RT3070:
+	case RT3078:
 	case RT3071:
 	case RT3090:
 	case RT3572:
@@ -4880,6 +4885,7 @@ void rt2800_vco_calibration(struct rt2x0
 		break;
 	case RF3053:
 	case RF3070:
+	case RF3078:
 	case RF3290:
 	case RF5350:
 	case RF5360:
@@ -5067,6 +5073,7 @@ static u8 rt2800_get_default_vgc(struct
 
 	if (rt2x00dev->curr_band == NL80211_BAND_2GHZ) {
 		if (rt2x00_rt(rt2x00dev, RT3070) ||
+		    rt2x00_rt(rt2x00dev, RT3078) ||
 		    rt2x00_rt(rt2x00dev, RT3071) ||
 		    rt2x00_rt(rt2x00dev, RT3090) ||
 		    rt2x00_rt(rt2x00dev, RT3290) ||
@@ -5273,6 +5280,16 @@ static int rt2800_init_registers(struct
 			rt2800_register_write(rt2x00dev, TX_SW_CFG1, 0x00080606);
 			rt2800_register_write(rt2x00dev, TX_SW_CFG2, 0x00000000);
 		}
+	} else if (rt2x00_rt(rt2x00dev, RT3078)) {
+		rt2800_register_write(rt2x00dev, TX_SW_CFG0, 0x00000400);
+
+		if (rt2x00_rt_rev_lt(rt2x00dev, RT3078, REV_RT3078F)) {
+			rt2800_register_write(rt2x00dev, TX_SW_CFG1, 0x00000000);
+			rt2800_register_write(rt2x00dev, TX_SW_CFG2, 0x0000002c);
+		} else {
+			rt2800_register_write(rt2x00dev, TX_SW_CFG1, 0x00080606);
+			rt2800_register_write(rt2x00dev, TX_SW_CFG2, 0x00000000);
+		}
 	} else if (rt2800_is_305x_soc(rt2x00dev)) {
 		rt2800_register_write(rt2x00dev, TX_SW_CFG0, 0x00000400);
 		rt2800_register_write(rt2x00dev, TX_SW_CFG1, 0x00000000);
@@ -5358,7 +5375,8 @@ static int rt2800_init_registers(struct
 		drv_data->max_psdu = 3;
 	} else if (rt2x00_rt_rev_gte(rt2x00dev, RT2872, REV_RT2872E) ||
 		   rt2x00_rt(rt2x00dev, RT2883) ||
-		   rt2x00_rt_rev_lt(rt2x00dev, RT3070, REV_RT3070E)) {
+		   rt2x00_rt_rev_lt(rt2x00dev, RT3070, REV_RT3070E) ||
+		   rt2x00_rt_rev_lt(rt2x00dev, RT3078, REV_RT3078E)) {
 		drv_data->max_psdu = 2;
 	} else {
 		drv_data->max_psdu = 1;
@@ -5860,6 +5878,7 @@ static void rt2800_init_bbp_30xx(struct
 	rt2800_bbp_write(rt2x00dev, 92, 0x00);
 
 	if (rt2x00_rt_rev_gte(rt2x00dev, RT3070, REV_RT3070F) ||
+	    rt2x00_rt_rev_gte(rt2x00dev, RT3078, REV_RT3078F) ||
 	    rt2x00_rt_rev_gte(rt2x00dev, RT3071, REV_RT3071E) ||
 	    rt2x00_rt_rev_gte(rt2x00dev, RT3090, REV_RT3090E))
 		rt2800_bbp_write(rt2x00dev, 103, 0xc0);
@@ -6552,6 +6571,7 @@ static void rt2800_init_bbp(struct rt2x0
 		rt2800_init_bbp_28xx(rt2x00dev);
 		break;
 	case RT3070:
+	case RT3078:
 	case RT3071:
 	case RT3090:
 		rt2800_init_bbp_30xx(rt2x00dev);
@@ -6693,7 +6713,8 @@ static void rt2800_rx_filter_calibration
 	/*
 	 * TODO: sync filter_tgt values with vendor driver
 	 */
-	if (rt2x00_rt(rt2x00dev, RT3070)) {
+	if (rt2x00_rt(rt2x00dev, RT3070) ||
+	    rt2x00_rt(rt2x00dev, RT3078)) {
 		filter_tgt_bw20 = 0x16;
 		filter_tgt_bw40 = 0x19;
 	} else {
@@ -6739,6 +6760,7 @@ static void rt2800_normal_mode_setup_3xx
 
 	rt2x00_set_field8(&rfcsr, RFCSR17_TX_LO1_EN, 0);
 	if (rt2x00_rt(rt2x00dev, RT3070) ||
+	    rt2x00_rt(rt2x00dev, RT3078) ||
 	    rt2x00_rt_rev_lt(rt2x00dev, RT3071, REV_RT3071E) ||
 	    rt2x00_rt_rev_lt(rt2x00dev, RT3090, REV_RT3090E) ||
 	    rt2x00_rt_rev_lt(rt2x00dev, RT3390, REV_RT3390E)) {
@@ -6747,6 +6769,7 @@ static void rt2800_normal_mode_setup_3xx
 	}
 
 	min_gain = rt2x00_rt(rt2x00dev, RT3070) ? 1 : 2;
+	min_gain = rt2x00_rt(rt2x00dev, RT3078) ? 1 : 2;
 	if (drv_data->txmixer_gain_24g >= min_gain) {
 		rt2x00_set_field8(&rfcsr, RFCSR17_TXMIXER_GAIN,
 				  drv_data->txmixer_gain_24g);
@@ -6765,9 +6788,11 @@ static void rt2800_normal_mode_setup_3xx
 		rt2800_bbp_write(rt2x00dev, 138, bbp);
 	}
 
-	if (rt2x00_rt(rt2x00dev, RT3070)) {
+	if (rt2x00_rt(rt2x00dev, RT3070) ||
+	    rt2x00_rt(rt2x00dev, RT3078))) {
 		rfcsr = rt2800_rfcsr_read(rt2x00dev, 27);
-		if (rt2x00_rt_rev_lt(rt2x00dev, RT3070, REV_RT3070F))
+		if (rt2x00_rt_rev_lt(rt2x00dev, RT3070, REV_RT3070F) ||
+		    rt2x00_rt_rev_lt(rt2x00dev, RT3078, REV_RT3078F))
 			rt2x00_set_field8(&rfcsr, RFCSR27_R1, 3);
 		else
 			rt2x00_set_field8(&rfcsr, RFCSR27_R1, 0);
@@ -6932,7 +6957,8 @@ static void rt2800_init_rfcsr_30xx(struc
 	rt2800_rfcsr_write(rt2x00dev, 25, 0x03);
 	rt2800_rfcsr_write(rt2x00dev, 29, 0x1f);
 
-	if (rt2x00_rt_rev_lt(rt2x00dev, RT3070, REV_RT3070F)) {
+	if (rt2x00_rt_rev_lt(rt2x00dev, RT3070, REV_RT3070F) ||
+	    rt2x00_rt_rev_lt(rt2x00dev, RT3078, REV_RT3078F)) {
 		reg = rt2800_register_read(rt2x00dev, LDO_CFG0);
 		rt2x00_set_field32(&reg, LDO_CFG0_BGSEL, 1);
 		rt2x00_set_field32(&reg, LDO_CFG0_LDO_CORE_VLEVEL, 3);
@@ -6965,6 +6991,7 @@ static void rt2800_init_rfcsr_30xx(struc
 	rt2800_rx_filter_calibration(rt2x00dev);
 
 	if (rt2x00_rt_rev_lt(rt2x00dev, RT3070, REV_RT3070F) ||
+	    rt2x00_rt_rev_lt(rt2x00dev, RT3078, REV_RT3078E) ||
 	    rt2x00_rt_rev_lt(rt2x00dev, RT3071, REV_RT3071E) ||
 	    rt2x00_rt_rev_lt(rt2x00dev, RT3090, REV_RT3090E))
 		rt2800_rfcsr_write(rt2x00dev, 27, 0x03);
@@ -8272,6 +8299,7 @@ static void rt2800_init_rfcsr(struct rt2
 
 	switch (rt2x00dev->chip.rt) {
 	case RT3070:
+	case RT3078:
 	case RT3071:
 	case RT3090:
 		rt2800_init_rfcsr_30xx(rt2x00dev);
@@ -8351,6 +8379,7 @@ int rt2800_enable_radio(struct rt2x00_de
 
 	if (rt2x00_is_usb(rt2x00dev) &&
 	    (rt2x00_rt(rt2x00dev, RT3070) ||
+	     rt2x00_rt(rt2x00dev, RT3078) ||
 	     rt2x00_rt(rt2x00dev, RT3071) ||
 	     rt2x00_rt(rt2x00dev, RT3572))) {
 		udelay(200);
@@ -8694,6 +8723,7 @@ static int rt2800_init_eeprom(struct rt2
 	case RF3052:
 	case RF3053:
 	case RF3070:
+	case RF3078:
 	case RF3290:
 	case RF3320:
 	case RF3322:
@@ -8726,6 +8756,7 @@ static int rt2800_init_eeprom(struct rt2
 	eeprom = rt2800_eeprom_read(rt2x00dev, EEPROM_NIC_CONF1);
 
 	if (rt2x00_rt(rt2x00dev, RT3070) ||
+	    rt2x00_rt(rt2x00dev, RT3078) ||
 	    rt2x00_rt(rt2x00dev, RT3090) ||
 	    rt2x00_rt(rt2x00dev, RT3352) ||
 	    rt2x00_rt(rt2x00dev, RT3390)) {
@@ -9216,6 +9247,7 @@ static int rt2800_probe_hw_mode(struct r
 	case RF3021:
 	case RF3022:
 	case RF3070:
+	case RF3078:
 	case RF3290:
 	case RF3320:
 	case RF3322:
@@ -9360,6 +9392,7 @@ static int rt2800_probe_hw_mode(struct r
 	case RF3052:
 	case RF3053:
 	case RF3070:
+	case RF3078:
 	case RF3290:
 	case RF5350:
 	case RF5360:
@@ -9396,6 +9429,7 @@ static int rt2800_probe_rt(struct rt2x00
 	case RT2872:
 	case RT2883:
 	case RT3070:
+	case RT3078:
 	case RT3071:
 	case RT3090:
 	case RT3290:
Index: b/drivers/net/wireless/ralink/rt2x00/rt2800usb.c
===================================================================
--- a/drivers/net/wireless/ralink/rt2x00/rt2800usb.c
+++ b/drivers/net/wireless/ralink/rt2x00/rt2800usb.c
@@ -276,7 +276,8 @@ static int rt2800usb_write_firmware(stru
 	 */
 	if (rt2x00_rt(rt2x00dev, RT2860) ||
 	    rt2x00_rt(rt2x00dev, RT2872) ||
-	    rt2x00_rt(rt2x00dev, RT3070)) {
+	    rt2x00_rt(rt2x00dev, RT3070) ||
+	    rt2x00_rt(rt2x00dev, RT3078)) {
 		offset = 0;
 		length = 4096;
 	} else {
@@ -929,6 +930,7 @@ static const struct usb_device_id rt2800
 	{ USB_DEVICE(0x07b8, 0x2870) },
 	{ USB_DEVICE(0x07b8, 0x2770) },
 	{ USB_DEVICE(0x07b8, 0x3070) },
+	{ USB_DEVICE(0x07b8, 0x3078) },
 	{ USB_DEVICE(0x07b8, 0x3071) },
 	{ USB_DEVICE(0x07b8, 0x3072) },
 	{ USB_DEVICE(0x1482, 0x3c09) },
@@ -941,6 +943,7 @@ static const struct usb_device_id rt2800
 	{ USB_DEVICE(0x8516, 0x2770) },
 	{ USB_DEVICE(0x8516, 0x2870) },
 	{ USB_DEVICE(0x8516, 0x3070) },
+	{ USB_DEVICE(0x8516, 0x3078) },
 	{ USB_DEVICE(0x8516, 0x3071) },
 	{ USB_DEVICE(0x8516, 0x3072) },
 	/* Alpha Networks */
@@ -1075,6 +1078,7 @@ static const struct usb_device_id rt2800
 	{ USB_DEVICE(0x0db0, 0x899a) },
 	/* Ovislink */
 	{ USB_DEVICE(0x1b75, 0x3070) },
+	{ USB_DEVICE(0x1b75, 0x3078) },
 	{ USB_DEVICE(0x1b75, 0x3071) },
 	{ USB_DEVICE(0x1b75, 0x3072) },
 	{ USB_DEVICE(0x1b75, 0xa200) },
@@ -1098,6 +1102,7 @@ static const struct usb_device_id rt2800
 	{ USB_DEVICE(0x148f, 0x2770) },
 	{ USB_DEVICE(0x148f, 0x2870) },
 	{ USB_DEVICE(0x148f, 0x3070) },
+	{ USB_DEVICE(0x14ef, 0x3078) },
 	{ USB_DEVICE(0x148f, 0x3071) },
 	{ USB_DEVICE(0x148f, 0x3072) },
 	/* Samsung */
